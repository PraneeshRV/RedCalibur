Metadata-Version: 2.4
Name: redcalibur
Version: 1.0.0
Summary: AI-powered red teaming toolkit for penetration testing and OSINT
Home-page: https://github.com/PraneeshRV/RedCalibur
Author: PraneeshRV
Author-email: praneesh@example.com
Project-URL: Bug Tracker, https://github.com/PraneeshRV/RedCalibur/issues
Project-URL: Documentation, https://github.com/PraneeshRV/RedCalibur/wiki
Keywords: security,penetration-testing,osint,red-team,cybersecurity,ai
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: Security
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch>=2.0.0
Requires-Dist: transformers>=4.30.0
Requires-Dist: scikit-learn>=1.3.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: seaborn>=0.12.0
Requires-Dist: shodan>=1.28.0
Requires-Dist: beautifulsoup4>=4.11.0
Requires-Dist: requests>=2.28.0
Requires-Dist: python-whois>=0.7.3
Requires-Dist: dnspython>=2.2.0
Requires-Dist: phonenumbers>=8.12.0
Requires-Dist: pillow>=9.2.0
Requires-Dist: pypdf2>=2.10.0
Requires-Dist: fpdf>=1.7.2
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: openai>=1.0.0
Requires-Dist: anthropic>=0.25.0
Requires-Dist: langchain>=0.1.0
Requires-Dist: langchain-community>=0.0.20
Requires-Dist: tensorflow>=2.13.0
Requires-Dist: keras>=2.13.0
Requires-Dist: pytorch-lightning>=2.0.0
Requires-Dist: requests>=2.31.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: selenium>=4.10.0
Requires-Dist: python-whois>=0.8.0
Requires-Dist: shodan>=1.30.0
Requires-Dist: python-nmap>=0.7.0
Requires-Dist: urlparse3>=1.1
Requires-Dist: tldextract>=3.4.0
Requires-Dist: validators>=0.20.0
Requires-Dist: nltk>=3.8.0
Requires-Dist: spacy>=3.6.0
Requires-Dist: textblob>=0.17.0
Requires-Dist: plotly>=5.15.0
Requires-Dist: wordcloud>=1.9.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: configparser>=5.3.0
Requires-Dist: click>=8.1.0
Requires-Dist: rich>=13.0.0
Requires-Dist: tqdm>=4.65.0
Requires-Dist: pytest>=7.4.0
Requires-Dist: pytest-asyncio>=0.21.0
Requires-Dist: fpdf2>=2.7.0
Requires-Dist: markdown>=3.4.0
Requires-Dist: jinja2>=3.1.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: asyncio>=3.4.3
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# RedCalibur 🗡️

> "Forged at the intersection of artificial intelligence and offensive cybersecurity."

**RedCalibur** is a professional, AI-powered red teaming toolkit designed to automate and enhance various phases of penetration testing, with a primary focus on comprehensive OSINT (Open Source Intelligence) reconnaissance. It leverages machine learning and large language models (LLMs) to supercharge ethical hacking workflows.

This project serves both as a practical cybersecurity tool and as a demonstration of applying neural networks and AI in cybersecurity for academic purposes.

---
## ⚔️ Features

RedCalibur integrates traditional red teaming techniques with modern AI, offering a wide array of capabilities.

### 🌐 Core OSINT Capabilities
* **Domain & Infrastructure Analysis**:
    * **WHOIS Lookup**: Comprehensive domain registration information.
    * **DNS Enumeration**: Discovery of A, AAAA, MX, TXT, CNAME, and NS records.
    * **Subdomain Discovery**: Automated enumeration using multiple techniques.
    * **SSL/TLS Analysis**: Certificate details and security configuration assessment.
    * **Port Scanning**: Intelligent scanning for open ports and services.
* **Threat Intelligence Integration**:
    * **Shodan**: Discover internet-facing devices, services, and vulnerabilities.
    * **VirusTotal**: Analyze domains and IPs for known malicious activity.
* **Search & Data Mining**:
    * **Google Dorking**: Automate advanced search queries to find sensitive information.
    * **Leak Detection**: Search Pastebin and GitHub for potential data leaks (placeholder).
    * **Dark Web Mentions**: Search for mentions on the dark web (placeholder).

### 🕵️ Advanced OSINT Capabilities
* **Image & File OSINT**:
    * **EXIF Metadata Extraction**: Extract hidden data from images.
    * **Document Metadata Analysis**: Analyze metadata from PDF documents.
    * **Reverse Image Search**: Find where an image appears online (placeholder).
* **Social Media Reconnaissance**:
    * **Username Footprinting**: Gather information from social media handles (placeholder).
    * **LinkedIn Scraping**: Scrape company and employee data (placeholder).
    * **Twitter OSINT**: Analyze user data and activity (placeholder).

### 🧠 AI-Enhanced Features
* **AI-Powered Phishing Detection**:
    * **Custom Neural Networks**: A PyTorch-based classifier for URL and feature analysis.
    * **Ensemble Methods**: Combines a Random Forest and Neural Network for improved accuracy and robustness.
    * **Advanced Feature Engineering**: Extracts over 10 features from URLs, including Shannon entropy and domain structure, for precise analysis.
* **Intelligent Analysis & Reporting**:
    * **LLM Integration**: Leverages large language models (e.g., Gemini) for contextual understanding and summarization.
    * **Automated Risk Scoring**: AI-driven assessment to prioritize findings.
    * **Professional Report Generation**: Automatically create summary reports in PDF and JSON formats.
---

## 🏗️ Architecture

```
RedCalibur/
├── redcalibur/
│   ├── ai_core/                  # Core AI and LLM integration
│   ├── cli.py                    # Main CLI interface
│   ├── config.py                 # Configuration and environment loading
│   ├── osint/
│   │   ├── ai_enhanced/          # AI-powered summarization, risk scoring, reporting
│   │   ├── domain_infrastructure/ # WHOIS, DNS, subdomains, SSL, tech stack, etc.
│   │   ├── image_file_osint/     # EXIF, document metadata, reverse image search
│   │   ├── network_threat_intel/ # Shodan, vuln scan, ASN, passive DNS
│   │   ├── search_engine_data_mining/ # Google dorking, dark web, leak search
│   │   ├── social_media_recon/   # Twitter, LinkedIn, Facebook/Instagram OSINT
│   │   ├── user_identity/        # Username, email, phone, breach lookups
│   │   └── virustotal_integration.py # VirusTotal API integration
│   ├── phishing_detection/       # AI phishing detection models
│   ├── prompt_injection/         # LLM security testing (future)
│   ├── payload_generation/       # AI payload creation (future)
│   ├── reconnaissance/           # AI-powered recon (future)
│   └── reporting/                # (Reserved for future reporting modules)
├── models/                       # Saved AI models
├── data/                         # Training datasets
├── reports/                      # Output reports (PDF, JSON, Markdown)
├── README.md
├── requirements.txt
└── test.py                       # Component testing
```
---

## ⚡ Running the Project

```bash
# Quick demo
.venv/bin/python demo.py phishing --simple

# Test all components
.venv/bin/python test.py

# Custom URL analysis
.venv/bin/python demo.py phishing --url "your-url-here"
```

The toolkit is now ready for demonstration, testing, and further development for your AI and Neural Networks coursework!

---
## 📦 Installation

### Quick Install
```bash
git clone https://github.com/PraneeshRV/RedCalibur.git
cd RedCalibur
pip install -e .
```

### Production Install
```bash
pip install redcalibur
```

### Environment Setup
```bash
# Create virtual environment (recommended)
python -m venv redcalibur-env
source redcalibur-env/bin/activate  # Linux/Mac
# redcalibur-env\Scripts\activate  # Windows

# Install dependencies
pip install -r requirements.txt
```

## ⚙️ Configuration

### Environment Variables
```bash
# Required for full functionality
export SHODAN_API_KEY="your_shodan_api_key"
export OPENAI_API_KEY="your_openai_api_key"
export ANTHROPIC_API_KEY="your_anthropic_api_key"

# Optional
export REDCALIBUR_OUTPUT_DIR="./reports"
export REDCALIBUR_LOG_LEVEL="INFO"
```

### Configuration Check
```bash
redcalibur config --check
redcalibur config --show
```

## 🎯 Usage

### Command Line Interface

#### Domain Reconnaissance
```bash
# Complete domain analysis
redcalibur domain --target example.com --all

# Specific checks
redcalibur domain --target example.com --whois --dns --ssl
redcalibur domain --target example.com --subdomains
```

#### Network Scanning
```bash
# Port scanning
redcalibur scan --target 192.168.1.1 --ports 80,443,22,21

# Shodan integration
redcalibur scan --target example.com --shodan
```

#### Username Intelligence
```bash
# Multi-platform username lookup
redcalibur username --target johndoe --platforms twitter,linkedin,github

# All supported platforms
redcalibur username --target johndoe
```

#### URL Scanning
```bash
# Scan a URL for malicious activity using VirusTotal
redcalibur urlscan --url http://example.com
```

#### File-Based OSINT
```bash
# Extract metadata from a PDF document
redcalibur file-osint extract-doc-meta --path /path/to/document.pdf

# Extract EXIF data from an image
redcalibur file-osint extract-exif --path /path/to/image.jpg
```

#### All-in-One Command
```bash
# Run all functionalities and generate a summary report
redcalibur all --target-domain example.com --target-ip 192.168.1.1 --username johndoe --platforms twitter,linkedin --output summary_report
```

#### Automated Reconnaissance
```bash
# Fully automated, interactive OSINT process
redcalibur auto-recon
```

#### Report Generation
```bash
# Generate comprehensive reports
redcalibur report --input results.json --format pdf
redcalibur report --input results.json --format both --output custom_name
```

## 📊 Sample Output

```json
{
  "target": "example.com",
  "timestamp": "2025-09-08T01:48:00",
  "whois": {
    "registrar": "Example Registrar",
    "creation_date": "2000-01-01",
    "expiration_date": "2026-01-01"
  },
  "dns": {
    "A": ["93.184.216.34"],
    "MX": ["mail.example.com"]
  },
  "ssl": {
    "issuer": "DigiCert Inc",
    "notAfter": "2025-12-31",
    "subjectAltName": ["example.com", "www.example.com"]
  },
  "ai_summary": "Target shows standard configuration with valid SSL certificate expiring in 2025...",
  "risk_score": 0.3
}
```
### Development Setup
```bash
git clone https://github.com/PraneeshRV/RedCalibur.git
cd RedCalibur
python -m venv dev-env
source dev-env/bin/activate
pip install -e ".[dev]"
```

### Running Tests
```bash
python -m pytest tests/
```


## 🛡️ Security & Ethics

### Responsible Use
- **Educational Purpose**: Designed for security professionals and researchers
- **Legal Compliance**: Ensure you have proper authorization before testing
- **Ethical Guidelines**: Follow responsible disclosure practices
- **Rate Limiting**: Built-in delays to respect target systems

### Disclaimer
⚠️ **IMPORTANT**: This toolkit is for educational and authorized testing purposes only. Unauthorized use against systems you do not own or have explicit permission to test is illegal and unethical.

## 🤝 Contributing

We welcome contributions!

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🔗 Links
- **Issues**: [Bug Reports](https://github.com/PraneeshRV/RedCalibur/issues)
- **Discussions**: [Community](https://github.com/PraneeshRV/RedCalibur/discussions)

## 🙏 Acknowledgments

- Inspired by the cybersecurity community
- Built with modern AI/ML technologies
- Designed for the next generation of security professionals

---

**RedCalibur** - *Forging the future of automated red teaming* ⚔️
